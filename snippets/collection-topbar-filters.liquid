{% liquid
  assign sort_by = collection.sort_by
  assign default_sort_by = collection.default_sort_by
  assign sort_options = collection.sort_options
%}

<div class="topbar-filter-section">
  <div>{{ collection.title }} {{ collection.products_count }}</div>
  <ul class="filter-list">
    {% for filter in filters %}
      <div class="filter-container-{{ filter.label }}">
        <li class="filter-label filter-{{ filter.label }}">{{ filter.label }}</li>
        <ul class="filter-options-list filter-{{ filter.label }}-options">
          {% for value in filter.values %}
            {% if value.active %}
              <li class="filter-value-item active"><a href="{{ value.url_to_remove }}">{{ value.label }}</a></li>
            {% else %}
              <li class="filter-value-item"><a href="{{ value.url_to_add }}">{{ value.label }}</a></li>
            {% endif %}
          {% endfor %}
        </ul>
      </div>
    {% endfor %}
  </ul>
  <div class="sorting-section">
    <span class="sort-btn">SORT BY</span>
    <ul class="sort-list">
      {% for option in sort_options %}
        {% if sort_by == option.value %}
          <li class="sort-list-item active" data-name="{{ option.value }}">{{ option.name }}</li>
        {% else %}
          <li class="sort-list-item" data-name="{{ option.value }}">{{ option.name }}</li>
        {% endif %}
      {% endfor %}
    </ul>
  </div>
</div>

<style>
  .topbar-filter-section {
    display: flex;
    justify-content: space-between;
    text-transform: uppercase;
  }
  .filter-list {
    list-style: none;
    display: flex;
    justify-content: center;
  }
  .filter-label {
    margin: 0 20px;
  }
  {% for filter in filters %}
    .filter-container-{{ filter.label }} {
      position: relative;
      cursor: pointer;
    }
    .filter-{{ filter.label }}-options {
      display: none;
      position: absolute;
      z-index: 10000;
      background-color: #ffffff;
      border: none;
      box-shadow: 0 1px 1px 0px #dddddd;
      padding-top: 19px;
      padding-bottom: 29px;
      padding-left: 67px;
      padding-right: 124px;
      left: -67px;
    }
    .filter-{{ filter.label }}-options li {
      list-style: none;
      margin: 5px 0;
      padding: 0;
      font-size: 14px;
    }
    .sorting-section {
      position: relative;
    }
    .sort-list {
      position: absolute;
      z-index: 1000;
      left: -150px;
      margin: 0;
      display: none;
      padding-top: 19px;
      padding-bottom: 29px;
      padding-left: 64px;
      padding-right: 124px;
      font-size: 14px;
      background-color: #ffffff;
      border: none;
      box-shadow: 0 1px 1px 0px #dddddd;
    }
    .sort-list li {
      list-style: none;
      margin: 5px 0;
      padding: 0;
      font-size: 12px;
      cursor: pointer;
    }
    .show-sort-list {
      display: block;
    }
  {% endfor %}
  .show-filter {
    display: block;
  }
  .sort-btn {
    cursor: pointer;
  }
  .filter-value-item.active, .sort-list-item.active {
    text-decoration: underline;
  }
</style>

<script>
function sortingFunction(){
  var sortItems = document.querySelectorAll(".sort-list-item")
  sortItems.forEach(item=>{
    item.addEventListener('click', (e)=>{
      let url = "http://";
      if (window.location.search.indexOf("filter") === -1){
        url += window.location.host + window.location.pathname + `/?sort_by=${e.target.dataset.name}`
      }
      else {
        if (window.location.search.indexOf("sort_by") === -1) {
          url += window.location.host + window.location.pathname + window.location.search + `&sort_by=${e.target.dataset.name}`
        }
        else {
          var initIndex = window.location.search.indexOf("sort_by")
          var toBeReplaced = window.location.search.slice(initIndex)
          url += window.location.host + window.location.pathname + window.location.search.replace(toBeReplaced, `sort_by=${e.target.dataset.name}`)
        }
      }
      window.location.replace(url)
    })
  })
}

function applyClickEventForFilter() {
  document.querySelectorAll(".filter-label").forEach(label=>{
    label.addEventListener('click', (event)=> {
      var className = `${event.target.classList[1]}-options`
      var target = document.querySelector(`.${className}`)
      if (target.classList.contains("show-filter")){
        target.classList.remove("show-filter")
      }
      document.querySelectorAll(".filter-options-list").forEach(item => {
        item.classList.remove("show-filter")
      })
      target.classList.add("show-filter")
    })
  })
}

function applyClickEventForSorting() {
  var target = document.querySelector(".sorting-section")
  target.addEventListener('click', ()=>{
    if (document.querySelector(".sort-list").classList.contains('show-sort-list')){
      document.querySelector(".sort-list").classList.remove('show-sort-list')
    }
    else {
      document.querySelector(".sort-list").classList.add('show-sort-list')
    }
  })
}

function applyMouseLeaveEventForFilter(){
  document.querySelectorAll(".filter-options-list").forEach(list=>{
    list.addEventListener("mouseleave", (e)=>{
      e.target.classList.remove("show-filter")
    })
  })
}

function applyMouseLeaveEventForSorting(){
  console.log(document.querySelector("sort-list"))
  document.querySelector(".sort-list").addEventListener("mouseleave", (e)=>{
    e.target.classList.remove("show-sort-list")
  })
}


applyClickEventForFilter()
applyClickEventForSorting()
applyMouseLeaveEventForFilter()
applyMouseLeaveEventForSorting()
sortingFunction()
</script>
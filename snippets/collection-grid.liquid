
<!-- BEGIN USF -->
{% comment %}
Snippet Arguments
- collection: Liquid 'collection' or 'search' object
- items: Paginated 'collection.products' or 'search.results' list. Cannot be pulled from the the 'collection' object passed in above
- enable_sidebar: boolean
- filter_style: 'sidebar' or 'drawer'collection-filter
- enable_sort: boolean
- enable_collection_count
- per_row
- mobile_flush_grid
- quick_shop_enable
{% endcomment %}

{% liquid
  if collection.products
    assign count = collection.products_count
    assign count_label = 'collections.general.items_with_count'
  endif

  if collection.results
    assign count = collection.results_count
    assign count_label = 'general.search.result_count'
  endif

  assign filters = collection.filters
  assign sort_by = collection.sort_by
  assign default_sort_by = collection.default_sort_by
  assign sort_options = collection.sort_options
  assign current_filter_size = 0

  for filter in filters
    assign current_filter_size = current_filter_size | plus: filter.active_values.size
  endfor
%}
<style>
  .pagination:not(.usf-pagination) {
      display: none
  }

  .collection-content .grid__item--content {
      width: 100%;
  }
</style>
<div class="collection-grid__wrapper">

    {% capture globalSettings %}
         {
            quick_shop_enable: {{ settings.quick_shop_enable | json}},
  			product_grid_image_size: {{ settings.product_grid_image_size | json }},
  			product_hover_image: {{ settings.product_hover_image | json }},
  			enable_swatches: {{ settings.enable_swatches | json }},
  			type_product_style: {{ settings.type_product_style | json }},
  			vendor_enable: {{ settings.vendor_enable | json }},
  			product_zoom_enable: {{ settings.product_zoom_enable | json }},
  			inventory_enable: {{ settings.inventory_enable | json }},
  			inventory_transfers_enable: {{ settings.inventory_transfers_enable | json }},
  			show_breadcrumbs: {{ settings.show_breadcrumbs | json }},
  			enable_product_reviews: {{ settings.enable_product_reviews | json }},
  			reviews_layout: {{ settings.reviews_layout | json }},
  			sku_enable: {{ settings.sku_enable | json }},
  			product_save_amount: {{ settings.product_save_amount | json }},
  			product_save_type: {{ settings.product_save_type | json }},
  			trust_image: {{ settings.trust_image | json }},
  			trust_image_width: {{ settings.trust_image.width | json}},
  			trust_image_aspect_ratio:{{ settings.trust_image.aspect_ratio | json}},
  			trust_img_url: '{{img_url}}',
  			trust_image_alt: {{ settings.trust_image.alt | json}},
  			trust_image_src: '{{ settings.trust_image | img_url: '540x' }}',
  			product_contact_title: {{ settings.product_contact_title | json }},
  			product_contact: {{ settings.product_contact | json }},
  			quick_shop_text: {{ settings.quick_shop_text | json }},
  			product_grid_image_fill: {{ settings.product_grid_image_fill | json }}

         }
    {% endcapture %}
  	{% capture sectionSettings %}
         {
            per_row: {{ section.settings.per_row | json}},
  			mobile_flush_grid: {{ section.settings.mobile_flush_grid | default: false | json }},
         }
    {% endcapture %}
    <script>
        window.usf_gridItemWidth = {{ grid_item_width | json }};
        window._usfSettingGlobal = {{ globalSettings }};
        window.usf_sectionSettings = {{ sectionSettings }};
        window._usfCloseModalText = {{ 'general.accessibility.close_modal' | t | json }};
    </script>
    <style>
#usf_container{
    visibility:hidden;
}
</style>
<div id="usf_container"></div>
<div class="usf-skeleton-container">
	<style>              
	  @media (max-width: 749px){
		.usf-mobile-hidden{
		  display: none !important;
		}
		.usf-skeleton-container .usf-sr-config__mobile-filters-wrapper{
		  display: flex;
		  width: 100%;
		  flex-wrap: wrap;
		}
		.usf-skeleton-container .usf-filters, 
		.usf-skeleton-container .usf-sr-config__mobile-filters-wrapper .usf-c-select{
		  height: 49px;
		  border: 1px solid #ededed;
		  width: 50%;
		  border-left: none;
		  display: flex !important;
		  align-items: center;
		}
		.usf-skeleton-container .usf-filters{
		  border-left: 1px solid #ededed;
		}

		.usf-skeleton-container .usf-results{
		  height: 400px;
		  margin-left: -20px;
		  display: flex;
		  flex-wrap: wrap;
		}
		.usf-skeleton-container .usf-sr-config{
		  display: flex;
		  align-items: center;
		  justify-content: space-between;
		  margin-top: 13px;
		  flex-wrap: wrap;
		}
		
		.usf-skeleton-container .usf-sr-summary:before{
		  margin: 0 !important;
		  width: 100px !important;
		}
		.usf-skeleton-container .usf-views:before{
		  margin: 0 !important;
		  width: 50px !important;
		  margin-left: auto !important;
		}
		.usf-skeleton-container .usf-grid__item{
		  width: 50%;
		  padding-left: 20px;
		}
		.usf-skeleton-container .usf-sr-summary, 
		.usf-skeleton-container .usf-views{
		  margin: 30px 0 20px 0;
		  display: block;
		  width: 50%;
		}
		
		.usf-skeleton-container .usf-filters:before,
		.usf-skeleton-container .usf-c-select:before{
		  margin: 30px;
		}
		
		.usf-skeleton-container .usf-sr-container{
		  width: 100%;
		  padding: 0;
		  float: none;
		}
	  }
	  
	  .usf-skeleton-container .usf-filters:before,
	  .usf-skeleton-container .usf-c-select:before,
	  .usf-skeleton-container .usf-sr-summary:before,
	  .usf-skeleton-container .usf-views:before,
	  .usf-skeleton-container .usf-facet .usf-title:before,
	  .usf-skeleton-container .usf-facet .usf-body:before,
	  .usf-skeleton-container .usf-facet .usf-body:after              
	  {
		content:'';
		display: block;
		background-color: #0000000b;
		-webkit-animation: usf-skeleton-animation 2.3s infinite;
		animation: usf-skeleton-animation 2.3s infinite;
		height: 10px;
		border-radius: 10px;
		width: 100%;                
	  }
	  
	  @keyframes usf-skeleton-animation {
		0% {
			opacity: 1
		}

		50% {
			opacity: .5
		}

		100% {
			opacity: 1
		}
	  }
	  
	  @media (min-width: 750px){
		.usf-skeleton-container .usf-desktop-hidden{
		  display: none !important;
		}
		.usf-skeleton-container .usf-facet .usf-title,
		.usf-skeleton-container .usf-facet .usf-body,
		.usf-skeleton-container .usf-c-select
		{
		  display: block !important;
		}              
	  
		.usf-skeleton-container .usf-sr-config__mobile-filters-wrapper{
		  display: none;
		}
		
		.usf-skeleton-container .usf-facets{
		  display: block;
		  width: 23%;
		  float: left;
		  margin-top: 17px;
		}
		
		.usf-skeleton-container .usf-sr-container {
		  width: 77%;
		  float: left;
		  padding-left: 30px;
		  margin-top: 17px;
		}
		
		.usf-skeleton-container .usf-sr-config{
		  display: flex;
		}
		
		.usf-skeleton-container .usf-sr-config > .usf-c-select{
		  width: 200px;
		}
		
		.usf-skeleton-container .usf-sr-summary{
		  width: 100%;
		}
		.usf-skeleton-container .usf-sr-summary:before{
		  margin: auto;
		  width: 200px;
		}
		.usf-skeleton-container .usf-views:before{
		}
		.usf-skeleton-container .usf-grid__item{
		  width: 50%;
		  padding-left: 20px;
		}
		.usf-skeleton-container .usf-views{
		  display: block;
		  width: 50px;
		}
		
		.usf-skeleton-container .usf-sr-container{
		  min-height: 700px;
		}
	  }  
	  
	  .usf-skeleton-container .usf-facet{
		margin-bottom: 40px;
	  }
	  
	  .usf-skeleton-container .usf-facet .usf-title:before{                
		margin-bottom: 25px;
		width: 70%;
	  }
	  
	  .usf-skeleton-container .usf-facet .usf-body:before,
	  .usf-skeleton-container .usf-facet .usf-body:after
	  {
		margin-bottom: 16px;
	  }
	</style>
  
	<div class="usf-facets usf-mobile-hidden">
	  <div class="usf-facet">
		<div class="usf-title"></div>
		<div class="usf-body"></div>                
	  </div>
	  <div class="usf-facet">
		<div class="usf-title"></div>
		<div class="usf-body"></div>
	  </div>
	</div>
	<div class="usf-sr-container">
	  <div class="usf-sr-config">
		<div class="usf-sr-config__mobile-filters-wrapper">
		  <div class="usf-filters"></div>
		  <div class="usf-c-select"></div>
		</div>
		<div class="usf-views usf-mobile-hidden"></div>
		<span class="usf-sr-summary"></span>
		<div class="usf-views usf-desktop-hidden"></div>
		<div class="usf-c-select usf-mobile-hidden"></div>
	  </div>
	  <div class="usf-results usf-grid">
		<div class="usf-grid__item"></div>
		<div class="usf-grid__item"></div>
		<div class="usf-grid__item"></div>
		<div class="usf-grid__item"></div>
	  </div>
	</div>       
</div>
</div>

{%- if enable_sidebar and filter_style != 'drawer' -%}
{% comment %}
  Sidebar enabled but not in drawer mode, only show filter button on mobile
{% endcomment %}
{% style %}
@media screen and (min-width: 769px) {
  .collection-filter__item--drawer {
    display: none;
  }
  .collection-filter__item--count {
    text-align: left;
  }
  html[dir="rtl"] .collection-filter__item--count {
    text-align: right;
  }
}
{% endstyle %}
{%- endif -%}

{%- unless enable_sidebar -%}
{% comment %}
    Disable sidebar & filter features
{% endcomment %}
{% style %}
.collection-filter__item--drawer {
  display: none;
}
.collection-filter__item--count {
  text-align: left;
}
html[dir="rtl"] .collection-filter__item--count {
  text-align: right;
}
{% endstyle %}
{%- endunless -%}

{%- unless enable_sort -%}
{% style %}
.collection-filter__sort-container {
  display: none;
}
{% endstyle %}
{%- endunless -%}
<!-- END USF -->

{% comment %}USF
{% comment %}
Snippet Arguments
- collection: Liquid 'collection' or 'search' object
- items: Paginated 'collection.products' or 'search.results' list. Cannot be pulled from the the 'collection' object passed in above
- enable_sidebar: boolean
- filter_style: 'sidebar' or 'drawer'
- enable_sort: boolean
- enable_collection_count
- per_row
- mobile_flush_grid
- quick_shop_enable
{% endcomment %}

{% liquid
  if collection.products
    assign count = collection.products_count
    assign count_label = 'collections.general.items_with_count'
  endif

  if collection.results
    assign count = collection.results_count
    assign count_label = 'general.search.result_count'
  endif

  assign filters = collection.filters
  assign sort_by = collection.sort_by
  assign default_sort_by = collection.default_sort_by
  assign sort_options = collection.sort_options
  assign current_filter_size = 0

  for filter in filters
    assign current_filter_size = current_filter_size | plus: filter.active_values.size
  endfor
%}

<div class="collection-grid__wrapper">
  <div class="collection-filter">
    <div class="collection-filter__item collection-filter__item--drawer">
      <button
        type="button"
        class="js-drawer-open-collection-filters btn btn--tertiary{% unless current_filter_size == 0 %} btn--tertiary-active{% endunless %}"
        aria-controls="FilterDrawer">
          <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-filter" viewBox="0 0 64 64"><path d="M48 42h10M48 42a5 5 0 1 1-5-5 5 5 0 0 1 5 5zM7 42h31M16 22H6M16 22a5 5 0 1 1 5 5 5 5 0 0 1-5-5zM57 22H26"/></svg>
          {{ 'collections.filters.title_tags' | t }}
          {%- if current_filter_size > 0 -%}
              ({{ current_filter_size }})
          {%- endif -%}
      </button>
    </div>

    <div class="collection-filter__item collection-filter__item--count small--hide">
      {%- if enable_collection_count -%}
        {{ count_label | t: count: count }}
      {%- endif -%}
    </div>

    <div class="collection-filter__item collection-filter__item--sort">
        <div class="collection-filter__sort-container">
        {%- assign sort_by = sort_by | default: default_sort_by -%}
        <label for="SortBy" class="hidden-label">{{ 'collections.sorting.title' | t }}</label>
        <select name="SortBy" id="SortBy" data-default-sortby="{{ default_sort_by }}">
          <option value="title-ascending"{% if sort_by == default_sort_by %} selected="selected"{% endif %}>{{ 'collections.sorting.title' | t }}</option>
          {%- for option in sort_options -%}
          <option value="{{ option.value }}"{% if option.value == sort_by %} selected="selected"{% endif %}>{{ option.name }}</option>
          {%- endfor -%}
        </select>
        </div>
    </div>
  </div>

  <div class="grid grid--uniform{% if mobile_flush_grid %} small--grid--flush{% endif %}"{% unless enable_collection_count %} data-scroll-to{% endunless %}>
    {%- for item in items -%}
      {%- if item.object_type == 'product' -%}
        {%- render 'product-grid-item',
          product: item,
          per_row: per_row,
          quick_shop_enable: quick_shop_enable
        -%}
      {%- else -%}
        {%- render 'search-grid-item',
          item: item,
          per_row: per_row
        %}
      {%- endif -%}
    {%- endfor -%}
  </div>
</div>

{%- if enable_sidebar and filter_style != 'drawer' and collection.filters.size > 0 -%}
{% comment %}
  Sidebar enabled but not in drawer mode, only show filter button on mobile
{% endcomment %}
{% style %}
@media screen and (min-width: 769px) {
  .collection-filter__item--drawer {
    display: none;
  }
  .collection-filter__item--count {
    text-align: left;
  }
  html[dir="rtl"] .collection-filter__item--count {
    text-align: right;
  }
}
{% endstyle %}
{%- endif -%}

{%- if enable_sidebar == false or collection.filters.size == 0 -%}
{% comment %}
    Disable sidebar & filter features
{% endcomment %}
{% style %}
.collection-filter__item--drawer {
  display: none;
}
.collection-filter__item--count {
  text-align: left;
}
html[dir="rtl"] .collection-filter__item--count {
  text-align: right;
}
{% endstyle %}
{%- endif -%}

{%- unless enable_sort -%}
{% style %}
.collection-filter__sort-container {
  display: none;
}
{% endstyle %}
{%- endunless -%}
USF{% endcomment %}

{% comment %}
Arguments
- product: product object
- [per_row]: number of items per row
- [quick_shop_enable]: boolean
- [collection]: collection object
{% endcomment %}

{%- liquid
  unless per_row
    assign per_row = 4
  endunless

  case per_row
    when 1
      assign grid_item_width = ''
    when 2
      assign grid_item_width = 'medium-up--one-half'
    when 3
      assign grid_item_width = 'small--one-half medium-up--one-third'
    when 4
      assign grid_item_width = 'small--one-half medium-up--one-quarter'
    when 5
      assign grid_item_width = 'small--one-half medium-up--one-fifth'
    when 6
      assign grid_item_width = 'small--one-half medium-up--one-sixth'
  endcase

  assign on_sale = false
  if product.compare_at_price > product.price
    assign on_sale = true
  endif

  assign product_tags = product.tags | join: ','
  assign has_custom_label = false
  if product.metafields.theme.label and product.metafields.theme.label != blank
    assign has_custom_label = true
    assign custom_label = product.metafields.theme.label.value
  elsif product_tags contains '_label_'
    for tag in product.tags
      if tag contains '_label_'
        assign tag_starts_with = tag | slice: 0
        if tag_starts_with == '_'
          assign has_custom_label = true
          assign custom_label = tag | replace: '_label_', ''
        endif
      endif
    endfor
  endif
-%}

<div class="grid__item grid-product {{ grid_item_width }}{% if quick_shop_enable %} grid-product__has-quick-shop{% endif %}" data-aos="row-of-{{ per_row }}" data-product-handle="{{ product.handle }}" data-product-id="{{ product.id }}">
  <div class="grid-product__content">
    {%- if has_custom_label -%}
      <div class="grid-product__tag grid-product__tag--custom">
        {{ custom_label }}
      </div>
    {%- else -%}
      {%- unless product.available -%}
        <div class="grid-product__tag grid-product__tag--sold-out">
          {{ 'products.product.sold_out' | t }}
        </div>
      {%- endunless -%}
      {%- if on_sale and product.available -%}
        <div class="grid-product__tag grid-product__tag--sale">
          {{ 'products.general.sale' | t }}
        </div>
      {%- endif -%}
    {%- endif -%}

    {%- liquid
      assign fixed_aspect_ratio = false
      unless settings.product_grid_image_size == 'natural'
        assign fixed_aspect_ratio = true
      endunless

      assign preview_image = product.featured_media.preview_image
      assign img_url = preview_image | img_url: '1x1' | replace: '_1x1.', '_{width}x.'
    -%}

    <div class="grid-product__link grid-product__link-{{ product.id }}">
      <div class="grid-product__image-mask">
        {%- if quick_shop_enable -%}
          <div class="quick-product__btn quick-product__btn--not-ready js-modal-open-quick-modal-{{ product.id }} small--hide">
            <span class="quick-product__label">{{ settings.quick_shop_text }}</span>
          </div>
        {%- endif -%}
        {%- if fixed_aspect_ratio -%}
          <div
            class="grid__image-ratio grid__image-ratio--{{ settings.product_grid_image_size }}">
            <img class="lazyload{% unless settings.product_grid_image_fill %} grid__image-contain{% endunless %}"
              data-src="{{ img_url }}"
              data-widths="[360, 540, 720, 900, 1080]"
              data-aspectratio="{{ preview_image.aspect_ratio }}"
              data-sizes="auto"
              alt="{{ preview_image.alt | escape }}">
          </div>
        {%- else -%}
          <div class="image-wrap"
            style="height: 0; padding-bottom: {{ 100 | divided_by: preview_image.aspect_ratio }}%;"
            >
            <img class="grid-product__image lazyload"
                data-src="{{ img_url }}"
                data-widths="[360, 540, 720, 900, 1080]"
                data-aspectratio="{{ preview_image.aspect_ratio }}"
                data-sizes="auto"
                alt="{{ preview_image.alt | escape }}">
            <noscript>
              <img class="grid-product__image lazyloaded"
                src="{{ preview_image | img_url: '400x' }}"
                alt="{{ preview_image.alt | escape }}">
            </noscript>
          </div>
        {%- endif -%}

        {%- if settings.product_hover_image and product.media.size > 1 -%}
          {%- for media in product.media offset: 1 limit: 1 -%}
            {%- assign second_image = media.preview_image -%}
          {%- endfor -%}
          <div class="grid-product__secondary-image small--hide">
            {%- assign img_url = second_image | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}
            <img class="lazyload"
                data-src="{{ img_url }}"
                data-widths="[360, 540, 720, 1000]"
                data-aspectratio="{{ second_image.aspect_ratio }}"
                data-sizes="auto"
                alt="{{ second_image.alt }}">
          </div>
        {%- endif -%}

        {% if settings.product_hover_multi_image %}
          <a href="{{ product.url | within: collection }}" class="image-list-{{ product.id }} not-loaded">
            {% for image in product.images %}
                {% if forloop.index == 1 %}
                    <div class="image-item-{{ product.id }} active">
                      <img class="grid-product__image lazyload" data-src="{{ image | img_url: 'grande' }}">
                    </div>
                {% else %}    
                    <div class="image-item-{{ product.id }}">
                      <img class="grid-product__image lazyload" src="{{ image | img_url: 'grande' }}">
                    </div>
                {% endif %}
            {% endfor %}
          </a>
          <span class="left-{{ product.id }} left-arrow"><i class="arrow-{{ product.id }} image-changing-arrow"></i></span>
          <span class="right-{{ product.id }} right-arrow"><i class="arrow-{{ product.id }} image-changing-arrow"></i></span>
        {% endif %}

        {%- if settings.enable_swatches -%}
          {%- assign swatch_trigger = 'products.general.color_swatch_trigger' | t | downcase -%}
          {%- for option in product.options_with_values -%}
            {%- liquid
              assign option_name = option.name | downcase
              assign is_color = false
              if option_name contains swatch_trigger
                assign is_color = true
              elsif swatch_trigger == 'color' and option_name contains 'colour'
                assign is_color = true
              endif
            -%}
            {%- if is_color -%}
              {%- assign option_index = forloop.index0 -%}
              {%- assign values = '' -%}
              {%- for variant in product.variants -%}
                {%- assign value = variant.options[option_index] %}
                {%- unless values contains value -%}
                  {%- liquid
                    assign values = values | join: ',' | append: ',' | append: value | split: ','
                  -%}

                  {%- if variant.image -%}
                    <div
                      class="grid-product__color-image grid-product__color-image--{{ variant.id }} small--hide">
                    </div>
                  {%- endif -%}
                {%- endunless -%}
              {%- endfor -%}
            {%- endif -%}
          {%- endfor -%}
        {%- endif -%}
      </div>

      <div class="grid-product__meta">
        <a href="{{ product.url | within: collection }}" class="grid-product__title grid-product__title--{{ settings.type_product_style }} custom-title">{{ product.title }}</a>
        <div class="grid-product__price np-h6">
          {%- if on_sale -%}
            <span class="visually-hidden">{{ 'products.general.regular_price' | t }}</span>
            <span class="grid-product__price--original">{{ product.compare_at_price | money }}</span>
            <span class="visually-hidden sale__price">{{ 'products.general.sale_price' | t }}</span>
          {%- endif -%}
          {%- if product.price_varies -%}
            {%- assign price = product.price_min | money -%}
            {{ 'products.general.from_text_html' | t: price: price }}
          {%- else -%}
            <span>{{ product.price | money }}</span>
          {%- endif -%}
          {%- if on_sale -%}
            {%- if settings.product_save_amount -%}
              {%- if settings.product_save_type == 'dollar' -%}
                {%- capture saved_amount -%}{{ product.compare_at_price | minus: product.price | money }}{%- endcapture -%}
              {%- else -%}
                {%- capture saved_amount -%}{{ product.compare_at_price | minus: product.price | times: 100.0 | divided_by: product.compare_at_price | round }}%{%- endcapture -%}
              {%- endif -%}
              <span class="grid-product__price--savings hide">
                {{ 'products.general.save_html' | t: saved_amount: saved_amount }}
              </span>
            {%- endif -%}
          {%- endif -%}

          {%- assign product_variant = product.selected_or_first_available_variant -%}
          {%- if product_variant.unit_price_measurement -%}
            <div class="product__unit-price">
              {%- capture unit_price_base_unit -%}
                {%- if product_variant.unit_price_measurement -%}
                  {%- if product_variant.unit_price_measurement.reference_value != 1 -%}
                    {{ product_variant.unit_price_measurement.reference_value }}
                  {%- endif -%}
                  {{ product_variant.unit_price_measurement.reference_unit }}
                {%- endif -%}
              {%- endcapture -%}

              {{ product_variant.unit_price | money }}/{{ unit_price_base_unit }}
            </div>
          {%- endif -%}
        </div>
        {%- if settings.vendor_enable -%}
          {% comment %} <div class="grid-product__vendor">{{ product.vendor }}</div> {% endcomment %}
          <div class="grid-product__vendor">
            {% comment %} {% for materiall in product.metafields.custom.materiall.value %}
              {{ materiall }}
            {% endfor %} {% endcomment %}
          </div>
        {%- endif -%}
        <a href="{{ product.url | within: collection }}" class="grid-product__material custom-material">
          {% for materiall in product.metafields.custom.material.value %}
            {% if forloop.last %}
              <span>{{ materiall }}</span>
            {% else %}
            <span>{{ materiall }}, </span>
            {% endif %}
          {% endfor %}
        </a>
      </div>
    </div>
  </div>
  {%- if settings.enable_swatches -%}
    {%- liquid
      assign swatch_trigger = 'products.general.color_swatch_trigger' | t | downcase
      assign swatch_file_extension = 'png'
      assign color_count = 0
    -%}

    {%- for option in product.options_with_values -%}
      {%- liquid
        assign option_name = option.name | downcase
        assign is_color = false
        if option_name contains swatch_trigger
          assign is_color = true
        elsif swatch_trigger == 'color' and option_name contains 'colour'
          assign is_color = true
        endif
      -%}
      {%- if is_color -%}
        {%- assign option_index = forloop.index0 -%}
        {%- assign values = '' -%}
        <div class="grid-product__colors grid-product__colors--{{ product.id }}">
          {%- for variant in product.variants -%}
            {%- assign value = variant.options[option_index] %}
            {%- unless values contains value -%}
              {%- liquid
                assign values = values | join: ',' | append: ',' | append: value | split: ','

                assign color_file_name = value | handle | append: '.' | append: swatch_file_extension
                assign color_image = color_file_name | file_img_url: '50x50' | prepend: 'https:' | split: '?' | first
                assign color_swatch_fallback = value | split: ' ' | last | handle
                assign color_count = color_count | plus: 1
              -%}

              <a
                href="{{ variant.url | within: collection }}"
                class="color-swatch color-swatch--small color-swatch--{{ value | handle }}{% if variant.image %} color-swatch--with-image{% endif %}"
                {% if variant.image %}
                  data-variant-id="{{ variant.id }}"
                  data-variant-image="{{ variant.image | img_url: '400x' }}"
                {% endif %}
                aria-label="{{ product.title }} - {{ value }}"
                style="background-color: {{ color_swatch_fallback }};{% if images[color_file_name] != blank %}  background-image: url({{ color_image }});{% endif %}">
                <span class="visually-hidden">{{ value }}</span>
              </a>
            {%- endunless -%}
           {%- endfor -%}
        </div>
        {%- if color_count < 2 -%}
          {%- style -%}
            .grid-product__colors--{{ product.id }} {
              display: none;
            }
          {%- endstyle -%}
        {%- endif -%}
      {%- endif -%}
    {%- endfor -%}
  {%- endif -%}

  {%- if settings.enable_product_reviews -%}
    <span class="shopify-product-reviews-badge" data-id="{{ product.id }}"></span>
  {%- endif -%}

  {%- if quick_shop_enable -%}
    {%- render 'quick-shop-modal', product: product -%}
  {%- endif -%}
</div>


{% style %}
@keyframes skeleton-loading {
    0% {
      background-color: hsl(200, 20%, 95%);
    }
    100% {
      background-color: hsl(200, 20%, 99%);
    }
  }

  #CollectionAjaxContent .grid-product__image {
    width: 100%;
    object-fit: cover;
    height: 600px;
  }
  @media (max-width: 1340px) {
    #CollectionAjaxContent .grid-product__image {
      height: 550px;
    }
  }
  @media (max-width: 1240px) {
    #CollectionAjaxContent .grid-product__image {
      height: 500px;
    }
  }
  @media (max-width: 1140px) {
    #CollectionAjaxContent .grid-product__image {
      height: 450px;
    }
  }
  @media (max-width: 1040px) {
    #CollectionAjaxContent .grid-product__image {
      height: 400px;
    }
  }

  @media (max-width: 940px) {
    #CollectionAjaxContent .grid-product__image {
      height: 350px;
    }
  }

  @media (max-width: 840px) {
    #CollectionAjaxContent .grid-product__image {
      height: 300px;
    }
  }

  @media (max-width: 768px) {
    #CollectionAjaxContent .grid-product__image {
      height: 500px;
    }
  }

  @media (max-width: 668px) {
    #CollectionAjaxContent .grid-product__image {
      height: 450px;
    }
  }

  @media (max-width: 600px) {
    #CollectionAjaxContent .grid-product__image {
      height: 420px;
    }
  }

  @media (max-width: 568px) {
    #CollectionAjaxContent .grid-product__image {
      height: 350px;
    }
  }

  @media (max-width: 500px) {
    #CollectionAjaxContent .grid-product__image {
      height: 320px;
    }
  }
  @media (max-width: 450px) {
    #CollectionAjaxContent .grid-product__image {
      height: 290px;
    }
  }
  @media (max-width: 400px) {
    #CollectionAjaxContent .grid-product__image {
      height: 260px;
    }
  }
  @media (max-width: 350px) {
    #CollectionAjaxContent .grid-product__image {
      height: 227px;
    }
  }
  
  #CollectionAjaxContent .custom-title {
    font-family: "Intervogue";
    font-size: 12.5px;
    line-height: 21px;
    letter-spacing: 0.03em;
    display: block;
    max-width: 248px;
  }
  #CollectionAjaxContent .custom-material {
    font-family: "Silvana";
    font-size: 12px;
    line-height: 18px;
    letter-spacing: -0.01em;
    display: inline-block;
  }
  #CollectionAjaxContent .image-list-{{ product.id }} {
      list-style: none;
      position: relative;
      overflow: hidden;
      margin: 0;
      display: block;
  }
  #CollectionAjaxContent .image-item-{{ product.id }} {
      position: absolute;
      left: 50000px;
  }
  #CollectionAjaxContent .image-item-{{ product.id }}.active {
      position: relative;
      top: 0;
      left: 0;
  }
  #CollectionAjaxContent .arrow-{{ product.id }} {
      border: solid black;
      border-width: 0 1px 1px 0;
      display: none;
      padding: 12px;
      transition: ease-in-out;
      cursor: pointer;
      z-index: 100000;
  }
  #CollectionAjaxContent .left-{{ product.id }} {
      position: absolute;
      transform: rotate(135deg);
      top: 40%;
      left: 15px;
      padding: 15px;
  }
  #CollectionAjaxContent .right-{{ product.id }} {
      position: absolute;
      transform: rotate(-45deg);
      top: 40%;
      right: 15px;
      padding: 15px;
  }
  #CollectionAjaxContent .left-{{ product.id }}.disabled, .right-{{ product.id }}.disabled {
      border-color: #dddddd;
      cursor: not-allowed;
  }
  #CollectionAjaxContent .show-arrow-{{ product.id }} {
      display: block;
  }
  [data-center-text=true] .grid-product__meta {
    text-align: left;
    padding: 10px 10px;
  }
  [data-type_product_capitalize=true] .grid-product__title {
    letter-spacing: 0px;
    font-size: 12px;
  }
  #CollectionAjaxContent .grid-product__price {
    position: absolute;
    top: 3px;
    right: 0;
    font-size: 12px;
    display: flex;
    flex-direction: column;
  }
  #CollectionAjaxContent .grid-product__vendor {
    font-size: 12px;
    letter-spacing: 0px;
    text-transform: capitalize;
    color: #2B2725;
    margin: 0;
  }
  #CollectionAjaxContent [data-center-text=true] .grid-product__colors {
    justify-content: flex-start
  }
  #CollectionAjaxContent .grid__item {
    padding-left: 5px;
  }
  @media (max-width: 1000px) {
    #CollectionAjaxContent .arrow-{{ product.id }} {
      display: block;
    }
    [data-center-text=true] .grid-product__meta {
      text-align: left;
      padding: 0;
      padding-left: 10px;
      font-size: 9px;
      line-height: 15px;
      letter-spacing: 0.05em;
      color: #2B2725;
      font-family: "Intervogue";
    }
    #CollectionAjaxContent .grid-product__price {
      position: relative;
      font-family: "Intervogue";
      margin: 0;
      top: 0px;
      right: 0;
    }
    #CollectionAjaxContent .grid__item.grid-product {
      margin-bottom: 20px;
    }
    #CollectionAjaxContent .custom-material {
      padding-top: 0px;
      margin-top: 0px;
    }
    #CollectionAjaxContent .custom-title {
      max-width: 100%;
    }
  }
  @media (max-width: 768px) {
    #CollectionAjaxContent .arrow-{{ product.id }} {
      display: block;
    }
    #CollectionAjaxContent .custom-title {
      font-family: "Intervogue";
      font-size: 9px;
      line-height: 15px;
      letter-spacing: 0.05em;
      color: #2B2725;
      max-width: 100%;
    }
    [data-center-text=true] .grid-product__meta {
      text-align: left;
      padding: 0;
      padding-left: 10px;
      font-size: 9px;
      line-height: 15px;
      letter-spacing: 0.05em;
      color: #2B2725;
      font-family: "Intervogue";
    }
    #CollectionAjaxContent .grid-product__price {
      position: relative;
      margin: 0;
      top: 0;
      right: 0;
      font-size: 9px;
    }

    #CollectionAjaxContent .grid__item.grid-product {
      margin-bottom: 40px;
    }

    #CollectionAjaxContent .custom-material {
      display: none;
    }
  }
  @media (max-width: 500px) {
    #CollectionAjaxContent .custom-title {
      max-width: 160px;
    }
    #CollectionAjaxContent .arrow-{{ product.id }} {
      padding: 7px;
    }
    #CollectionAjaxContent .left-{{ product.id }}, #CollectionAjaxContent .right-{{ product.id }}  {
        padding: 8px;
    }
  }
  {% if settings.product_hover_multi_image == true %}
    #CollectionAjaxContent .image-wrap {
      display: none;
    }
  {% endif %}
  
{% endstyle %} 

<script>
  // function to find index of active class
  function findActvieIndex(productId){
    var images = document.querySelectorAll(`.image-item-${productId}`)
    var index;
    for (var i=0; i < images.length; i++){
        if( images[i].classList.contains("active")){
            index = i
            break
        }
    }
    return {index: index, images: images}
}

// hover effect for mouseover
{% if settings.product_hover_multi_image == true %}
  document.querySelector(".grid-product__link-{{ product.id }}").addEventListener("mouseover", (e)=>{
    var arrow = document.querySelectorAll(".arrow-{{ product.id }}")
    arrow.forEach(element=>{
      element.classList.add("show-arrow-{{ product.id }}")
    })
    var data = findActvieIndex({{ product.id }})
  })
  // hover effect for mouseleave
  document.querySelector(".grid-product__link-{{ product.id }}").addEventListener("mouseleave", (e)=>{
    var arrow = document.querySelectorAll(".arrow-{{ product.id }}")
    arrow.forEach(element=>{
      element.classList.remove("show-arrow-{{ product.id }}")
    })
    var data = findActvieIndex({{ product.id }})
  })
{% endif %}
  if(document.readyState === 'ready' || document.readyState === 'complete') {
  
  } else {
    document.onreadystatechange = function () {
      if (document.readyState == "complete") {
        setTimeout(()=>{
          document.querySelectorAll(".not-loaded").forEach(item=>{
            item.classList.remove("not-loaded")
        }, 1000);
      })
      }
    }
  }
</script>